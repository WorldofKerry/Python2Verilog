# Runs pytest

name: pytest

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  quick:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r tests/requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download Icarus Verilog and Utilities
        run: |
          sudo apt-get install iverilog expect

      - name: Download OSS CAD Suite for yosys
        run: |
          wget -nv https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2023-08-02/oss-cad-suite-linux-x64-20230802.tgz
          tar -xzf oss-cad-suite-linux-x64-20230802.tgz
          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> $GITHUB_PATH

      - name: Run Pytest
        run: |
          python3 -m pytest -vs tests/ --cov=python2verilog/ --cov-report term-missing \
          --optimization-levels 0 2
          python3 -m pytest -vs tests/ --cov=python2verilog/ --cov-report term-missing \
          --write --optimization-levels 1 --synthesis

  full:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        pytest-args:
          [
            "--write --synthesis",
            "--synthesis",
            "--write --synthesis --first-test",
            "--synthesis --first-test",
          ]
        pytest-opti-levels: ["-L 0 1 2 4 8", "-L 16", "-L 32"]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r tests/requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download Icarus Verilog and Utilities
        run: |
          sudo apt-get install iverilog expect

      - name: Download OSS CAD Suite for yosys
        if: ${{ contains(matrix.pytest-args, 'synthesis') }}
        run: |
          wget -nv https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2023-08-02/oss-cad-suite-linux-x64-20230802.tgz
          tar -xzf oss-cad-suite-linux-x64-20230802.tgz
          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> $GITHUB_PATH

      - name: Run Pytest
        run: |
          python3 -m pytest tests/ --cov=python2verilog/ --cov-report term-missing \
          ${{ matrix.pytest-args }} ${{ matrix.pytest-opti-levels }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tests-data
          path: tests/integration/data

  testing:
    # Joins the matrix runs and makes sure all successful
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [quick, full]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
                contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
