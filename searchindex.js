Search.setIndex({"docnames": ["index", "python2verilog", "python2verilog.api", "python2verilog.backend", "python2verilog.backend.verilog", "python2verilog.frontend", "python2verilog.ir", "python2verilog.optimizer", "python2verilog.utils"], "filenames": ["index.rst", "python2verilog.rst", "python2verilog.api.rst", "python2verilog.backend.rst", "python2verilog.backend.verilog.rst", "python2verilog.frontend.rst", "python2verilog.ir.rst", "python2verilog.optimizer.rst", "python2verilog.utils.rst"], "titles": ["Welcome to python2verilog\u2019s documentation!", "python2verilog package", "python2verilog.api package", "python2verilog.backend package", "python2verilog.backend.verilog package", "python2verilog.frontend package", "python2verilog.ir package", "python2verilog.optimizer package", "python2verilog.utils package"], "terms": {"packag": 0, "subpackag": 0, "api": [0, 1], "submodul": [0, 1, 3], "modul": 0, "backend": [0, 1], "frontend": [0, 1], "generator2graph": [0, 1], "ir": [0, 1, 4, 5, 7], "context": [0, 1, 4, 5], "express": [0, 1, 3, 4, 7], "graph": [0, 1, 4, 5], "statement": [0, 1, 3, 4, 7], "optim": [0, 1, 6], "util": [0, 1], "assert": [0, 1], "string": [0, 1, 4, 6], "index": 0, "search": 0, "page": 0, "convert_graph": [1, 2], "convert_graph_debug": [1, 2], "verilog": [1, 2, 3, 5, 6], "ast": [1, 3, 5], "codegen": [1, 3], "result": [1, 5, 7], "root": [1, 4, 5, 7], "add_stat": [1, 6], "add_state_weak": [1, 6], "entri": [1, 6], "exit": [1, 6], "global_var": [1, 6], "input_var": [1, 6], "is_declar": [1, 6], "name": [1, 4, 6], "output_var": [1, 6], "state_var": [1, 6], "to_str": [1, 3, 4, 6, 8], "add": [1, 6, 8], "binop": [1, 6], "left": [1, 6], "right": [1, 6], "div": [1, 6], "int": [1, 2, 4, 6, 7, 8], "lessthan": [1, 6], "mul": [1, 6], "state": [1, 6], "sub": [1, 6], "var": [1, 6, 7], "assignnod": [1, 6, 7], "lvalu": [1, 4, 6], "rvalu": [1, 4, 6, 7], "basicel": [1, 6], "child": [1, 6], "get_all_children": [1, 6], "get_optimal_children": [1, 6], "optimal_child": [1, 6], "clockededg": [1, 6], "donenod": [1, 6], "edg": [1, 4, 6], "get_nam": [1, 6], "element": [1, 4, 6, 7], "children": [1, 6], "unique_id": [1, 6], "ifelsenod": [1, 6], "condit": [1, 4, 6], "false_edg": [1, 6], "optimal_false_edg": [1, 6], "optimal_true_edg": [1, 6], "true_edg": [1, 6], "nonclockededg": [1, 6], "vertex": [1, 4, 6], "yieldnod": [1, 6], "stmt": [1, 6, 7], "create_cytoscape_el": [1, 6], "create_networkx_adjacency_list": [1, 6], "blockingsubsitut": [1, 3, 4, 6], "case": [1, 3, 4, 6], "to_lin": [1, 3, 4, 6, 8], "caseitem": [1, 3, 4, 6], "declar": [1, 3, 4, 6], "nonblockingsubsitut": [1, 3, 4, 6], "statesubsitut": [1, 6], "subsitut": [1, 3, 4, 6], "validsubsitut": [1, 6], "optimizegraph": [1, 7], "unique_count": [1, 7], "backwards_replac": [1, 7], "graph_apply_map": [1, 7], "graph_update_map": [1, 7], "is_depend": [1, 7], "assert_dict_typ": [1, 8], "assert_list_typ": [1, 8], "assert_typ": [1, 8], "implementstolin": [1, 4, 6, 8], "indent": [1, 8], "indentifi": [1, 8], "indentor": [1, 8], "line": [1, 4, 6, 8], "assert_no_newlin": [1, 8], "concat": [1, 8], "nestifi": [1, 8], "python": [1, 2, 5, 7], "2": [1, 8], "wrapper": 2, "func": 2, "functiondef": [2, 5], "optimization_level": 2, "sourc": [2, 4, 5, 6, 7, 8], "convers": 2, "alwai": [3, 4], "atnegedg": [3, 4], "atnegedgestat": [3, 4], "atposedg": [3, 4], "atposedgestat": [3, 4], "ifels": [3, 4], "initi": [3, 4], "instanti": [3, 4], "localparam": [3, 4, 6], "posedgesyncalwai": [3, 4], "get_blocked_com": [3, 4], "get_inline_com": [3, 4], "while": [3, 4], "casebuild": [3, 4], "do_edg": [3, 4], "do_vertex": [3, 4], "new_caseitem": [3, 4], "get_module_lin": [3, 4], "get_module_str": [3, 4], "new_testbench": [3, 4], "new_testbench_lin": [3, 4], "new_testbench_str": [3, 4], "abstract": 4, "syntax": [4, 6], "tree": 4, "compon": 4, "class": [4, 5, 6, 7, 8], "trigger": 4, "arg": [4, 6], "bodi": 4, "list": [4, 6, 8], "none": [4, 6, 8], "valid": [4, 6], "str": [4, 6, 7, 8], "kwarg": [4, 6], "base": [4, 5, 6, 7, 8], "begin": [4, 6], "end": [4, 6], "To": [4, 6, 8], "negedg": 4, "posedg": 4, "case_item": [4, 6], "variou": 4, "item": [4, 6], "0": [4, 6, 7, 8], "n": [4, 6, 7], "endcas": [4, 6], "object": [4, 5, 6, 7, 8], "i": [4, 6, 7, 8], "e": [4, 6], "size": [4, 6], "32": [4, 6], "is_reg": [4, 6], "bool": [4, 6], "fals": [4, 6], "is_sign": [4, 6], "reg": [4, 6], "wire": [4, 6], "modifi": [4, 6], "1": [4, 6, 7, 8], "expr": [4, 7], "g": [4, 6], "b": 4, "current": 4, "just": 4, "then_bodi": 4, "else_bodi": 4, "els": [4, 6], "module_nam": 4, "given_nam": 4, "port_connect": 4, "dict": [4, 6, 7, 8], "instantiationo": 4, "f": 4, "given": 4, "valu": [4, 6, 7, 8], "input": 4, "output": [4, 6, 7], "add_default_port": 4, "true": [4, 6], "endmodul": 4, "clock": [4, 6, 7], "liter": [4, 6], "comment": 4, "repres": [4, 6], "block": [4, 6], "If": [4, 6, 7], "us": [4, 6], "directli": [4, 6], "treat": [4, 6], "separ": 4, "newlin": [4, 8], "oper": [4, 6], "interfac": [4, 6, 8], "nonblock": [4, 6], "convert": [4, 8], "unsynthesiz": 4, "creat": [4, 6, 8], "process": 4, "node": [4, 6, 7], "new": [4, 8], "": 4, "uniqu": [4, 6], "id": [4, 6], "identifi": 4, "code": 4, "gener": [4, 5, 7], "get": [4, 6], "properti": [4, 5, 6], "test_cas": 4, "tupl": [4, 5, 8], "testbench": 4, "multipl": 4, "test": 4, "each": [4, 6], "singl": [4, 6], "pars": 5, "function": [5, 7], "intermedi": [5, 6], "represent": [5, 6], "python_func": 5, "return": [5, 7, 8], "surround": 5, "contain": 5, "parser": 5, "factori": 6, "_state_var": 6, "set": 6, "need": [6, 8], "variabl": [6, 7], "o": [6, 7], "paramet": 6, "make": 6, "sure": 6, "pre": 6, "exist": 6, "what": 6, "check": 6, "ha": 6, "been": 6, "alreadi": 6, "op": 6, "A": [6, 7, 8], "can": [6, 7, 8], "equat": 6, "someth": 6, "integ": [6, 7], "logic": 6, "convent": 6, "non": 6, "assign": 6, "do": 6, "execut": 6, "next": 6, "without": 6, "cycl": [6, 7], "have": 6, "pass": 6, "basic": 6, "otherwis": 6, "signal": 6, "done": 6, "an": [6, 7, 8], "between": 6, "two": [6, 8], "vertic": 6, "yield": 6, "adjac": 6, "from": 6, "assum": 6, "ar": [6, 8], "hdl": 6, "special": 6, "type": [6, 8], "indic": 6, "thi": 6, "local": 6, "varaibl": 6, "more": 6, "than": 6, "one": 6, "cannot": 6, "same": 6, "mai": 6, "overwrit": 6, "other": [6, 8], "similar": 6, "assembli": 6, "threshold": 7, "closur": 7, "tune": 7, "how": 7, "much": 7, "algorithm": 7, "unrol": 7, "duplic": 7, "larger": 7, "reduct": 7, "increas": 7, "hardwar": 7, "usag": 7, "all": [7, 8], "its": 7, "time": 7, "complet": 7, "x": 7, "map": 7, "replac": 7, "instanc": [7, 8], "old_map": 7, "updat": 7, "whether": 7, "depend": 7, "dict_": 8, "key_typ": 8, "value_typ": 8, "kei": 8, "correctli": 8, "list_": 8, "type_": 8, "elem": 8, "obj": 8, "ani": 8, "defin": 8, "provid": 8, "method": 8, "data": 8, "serial": 8, "static": 8, "charact": 8, "indent_amount": 8, "amount": 8, "buffer": 8, "pair": 8, "visual": 8, "tool": 8}, "objects": {"": [[1, 0, 0, "-", "python2verilog"]], "python2verilog": [[2, 0, 0, "-", "api"], [3, 0, 0, "-", "backend"], [5, 0, 0, "-", "frontend"], [6, 0, 0, "-", "ir"], [7, 0, 0, "-", "optimizer"], [8, 0, 0, "-", "utils"]], "python2verilog.api": [[2, 0, 0, "-", "api"]], "python2verilog.api.api": [[2, 1, 1, "", "convert_graph"], [2, 1, 1, "", "convert_graph_debug"]], "python2verilog.backend": [[4, 0, 0, "-", "verilog"]], "python2verilog.backend.verilog": [[4, 0, 0, "-", "ast"], [4, 0, 0, "-", "codegen"]], "python2verilog.backend.verilog.ast": [[4, 2, 1, "", "Always"], [4, 2, 1, "", "AtNegedge"], [4, 2, 1, "", "AtNegedgeStatement"], [4, 2, 1, "", "AtPosedge"], [4, 2, 1, "", "AtPosedgeStatement"], [4, 2, 1, "", "BlockingSubsitution"], [4, 2, 1, "", "Case"], [4, 2, 1, "", "CaseItem"], [4, 2, 1, "", "Declaration"], [4, 2, 1, "", "Expression"], [4, 2, 1, "", "IfElse"], [4, 2, 1, "", "Initial"], [4, 2, 1, "", "Instantiation"], [4, 2, 1, "", "LocalParam"], [4, 2, 1, "", "Module"], [4, 2, 1, "", "NonBlockingSubsitution"], [4, 2, 1, "", "PosedgeSyncAlways"], [4, 2, 1, "", "Statement"], [4, 2, 1, "", "Subsitution"], [4, 2, 1, "", "While"]], "python2verilog.backend.verilog.ast.Always": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Case": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.CaseItem": [[4, 3, 1, "", "to_lines"], [4, 3, 1, "", "to_string"]], "python2verilog.backend.verilog.ast.Declaration": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Expression": [[4, 3, 1, "", "to_string"]], "python2verilog.backend.verilog.ast.IfElse": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Initial": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Instantiation": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Module": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Statement": [[4, 3, 1, "", "get_blocked_comment"], [4, 3, 1, "", "get_inline_comment"], [4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.Subsitution": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.ast.While": [[4, 3, 1, "", "to_lines"]], "python2verilog.backend.verilog.codegen": [[4, 2, 1, "", "CaseBuilder"], [4, 2, 1, "", "CodeGen"]], "python2verilog.backend.verilog.codegen.CaseBuilder": [[4, 3, 1, "", "do_edge"], [4, 3, 1, "", "do_vertex"], [4, 3, 1, "", "new_caseitem"]], "python2verilog.backend.verilog.codegen.CodeGen": [[4, 3, 1, "", "get_module_lines"], [4, 3, 1, "", "get_module_str"], [4, 4, 1, "", "module"], [4, 3, 1, "", "new_testbench"], [4, 3, 1, "", "new_testbench_lines"], [4, 3, 1, "", "new_testbench_str"]], "python2verilog.frontend": [[5, 0, 0, "-", "generator2graph"]], "python2verilog.frontend.generator2graph": [[5, 2, 1, "", "Generator2Graph"]], "python2verilog.frontend.generator2graph.Generator2Graph": [[5, 4, 1, "", "context"], [5, 4, 1, "", "results"], [5, 4, 1, "", "root"]], "python2verilog.ir": [[6, 0, 0, "-", "context"], [6, 0, 0, "-", "expressions"], [6, 0, 0, "-", "graph"], [6, 0, 0, "-", "statements"]], "python2verilog.ir.context": [[6, 2, 1, "", "Context"]], "python2verilog.ir.context.Context": [[6, 3, 1, "", "add_state"], [6, 3, 1, "", "add_state_weak"], [6, 5, 1, "", "entry"], [6, 5, 1, "", "exit"], [6, 5, 1, "", "global_vars"], [6, 5, 1, "", "input_vars"], [6, 3, 1, "", "is_declared"], [6, 5, 1, "", "name"], [6, 5, 1, "", "output_vars"], [6, 4, 1, "", "state_vars"], [6, 3, 1, "", "to_string"]], "python2verilog.ir.expressions": [[6, 2, 1, "", "Add"], [6, 2, 1, "", "BinOp"], [6, 2, 1, "", "Div"], [6, 2, 1, "", "Expression"], [6, 2, 1, "", "Int"], [6, 2, 1, "", "LessThan"], [6, 2, 1, "", "Mul"], [6, 2, 1, "", "State"], [6, 2, 1, "", "Sub"], [6, 2, 1, "", "Var"]], "python2verilog.ir.expressions.BinOp": [[6, 4, 1, "", "left"], [6, 4, 1, "", "right"], [6, 3, 1, "", "to_string"]], "python2verilog.ir.expressions.Expression": [[6, 3, 1, "", "to_string"]], "python2verilog.ir.graph": [[6, 2, 1, "", "AssignNode"], [6, 2, 1, "", "BasicElement"], [6, 2, 1, "", "ClockedEdge"], [6, 2, 1, "", "DoneNode"], [6, 2, 1, "", "Edge"], [6, 2, 1, "", "Element"], [6, 2, 1, "", "IfElseNode"], [6, 2, 1, "", "NonClockedEdge"], [6, 2, 1, "", "Vertex"], [6, 2, 1, "", "YieldNode"], [6, 1, 1, "", "create_cytoscape_elements"], [6, 1, 1, "", "create_networkx_adjacency_list"]], "python2verilog.ir.graph.AssignNode": [[6, 4, 1, "", "lvalue"], [6, 4, 1, "", "rvalue"], [6, 3, 1, "", "to_string"]], "python2verilog.ir.graph.BasicElement": [[6, 4, 1, "", "child"], [6, 3, 1, "", "get_all_children"], [6, 3, 1, "", "get_optimal_children"], [6, 4, 1, "", "optimal_child"]], "python2verilog.ir.graph.Edge": [[6, 3, 1, "", "get_name"], [6, 3, 1, "", "to_string"]], "python2verilog.ir.graph.Element": [[6, 4, 1, "", "children"], [6, 3, 1, "", "get_all_children"], [6, 3, 1, "", "get_optimal_children"], [6, 4, 1, "", "name"], [6, 3, 1, "", "to_string"], [6, 4, 1, "", "unique_id"]], "python2verilog.ir.graph.IfElseNode": [[6, 4, 1, "", "condition"], [6, 4, 1, "", "false_edge"], [6, 3, 1, "", "get_all_children"], [6, 3, 1, "", "get_optimal_children"], [6, 4, 1, "", "optimal_false_edge"], [6, 4, 1, "", "optimal_true_edge"], [6, 3, 1, "", "to_string"], [6, 4, 1, "", "true_edge"]], "python2verilog.ir.graph.YieldNode": [[6, 4, 1, "", "stmts"], [6, 3, 1, "", "to_string"]], "python2verilog.ir.statements": [[6, 2, 1, "", "BlockingSubsitution"], [6, 2, 1, "", "Case"], [6, 2, 1, "", "CaseItem"], [6, 2, 1, "", "Declaration"], [6, 2, 1, "", "NonBlockingSubsitution"], [6, 2, 1, "", "StateSubsitution"], [6, 2, 1, "", "Statement"], [6, 2, 1, "", "Subsitution"], [6, 2, 1, "", "ValidSubsitution"]], "python2verilog.ir.statements.Case": [[6, 3, 1, "", "to_lines"]], "python2verilog.ir.statements.CaseItem": [[6, 3, 1, "", "to_lines"]], "python2verilog.ir.statements.Declaration": [[6, 3, 1, "", "to_lines"]], "python2verilog.ir.statements.Statement": [[6, 3, 1, "", "to_lines"]], "python2verilog.ir.statements.Subsitution": [[6, 3, 1, "", "to_lines"]], "python2verilog.optimizer": [[7, 0, 0, "-", "graph"]], "python2verilog.optimizer.graph": [[7, 2, 1, "", "OptimizeGraph"], [7, 1, 1, "", "backwards_replace"], [7, 1, 1, "", "graph_apply_mapping"], [7, 1, 1, "", "graph_update_mapping"], [7, 1, 1, "", "is_dependent"]], "python2verilog.optimizer.graph.OptimizeGraph": [[7, 5, 1, "", "unique_counter"]], "python2verilog.utils": [[8, 0, 0, "-", "assertions"], [8, 0, 0, "-", "string"]], "python2verilog.utils.assertions": [[8, 1, 1, "", "assert_dict_type"], [8, 1, 1, "", "assert_list_type"], [8, 1, 1, "", "assert_type"]], "python2verilog.utils.string": [[8, 2, 1, "", "ImplementsToLines"], [8, 2, 1, "", "Indent"], [8, 2, 1, "", "Lines"]], "python2verilog.utils.string.ImplementsToLines": [[8, 3, 1, "", "to_lines"], [8, 3, 1, "", "to_string"]], "python2verilog.utils.string.Indent": [[8, 3, 1, "", "indentify"], [8, 5, 1, "", "indentor"]], "python2verilog.utils.string.Lines": [[8, 3, 1, "", "add"], [8, 3, 1, "", "assert_no_newline"], [8, 3, 1, "", "concat"], [8, 3, 1, "", "indent"], [8, 3, 1, "", "nestify"], [8, 3, 1, "", "to_string"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "python2verilog": [0, 1, 2, 3, 4, 5, 6, 7, 8], "": 0, "document": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8], "indic": 0, "tabl": 0, "packag": [1, 2, 3, 4, 5, 6, 7, 8], "subpackag": [1, 3], "modul": [1, 2, 3, 4, 5, 6, 7, 8], "api": 2, "submodul": [2, 4, 5, 6, 7, 8], "backend": [3, 4], "verilog": 4, "ast": 4, "codegen": 4, "frontend": 5, "generator2graph": 5, "ir": 6, "context": 6, "express": 6, "graph": [6, 7], "statement": 6, "optim": 7, "util": 8, "assert": 8, "string": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Welcome to python2verilog\u2019s documentation!": [[0, "welcome-to-python2verilog-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "python2verilog package": [[1, "python2verilog-package"]], "Subpackages": [[1, "subpackages"], [3, "subpackages"]], "Module contents": [[1, "module-python2verilog"], [2, "module-python2verilog.api"], [3, "module-python2verilog.backend"], [4, "module-python2verilog.backend.verilog"], [5, "module-python2verilog.frontend"], [6, "module-python2verilog.ir"], [7, "module-python2verilog.optimizer"], [8, "module-python2verilog.utils"]], "python2verilog.api package": [[2, "python2verilog-api-package"]], "Submodules": [[2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "python2verilog.api.api module": [[2, "module-python2verilog.api.api"]], "python2verilog.backend package": [[3, "python2verilog-backend-package"]], "python2verilog.backend.verilog package": [[4, "python2verilog-backend-verilog-package"]], "python2verilog.backend.verilog.ast module": [[4, "module-python2verilog.backend.verilog.ast"]], "python2verilog.backend.verilog.codegen module": [[4, "module-python2verilog.backend.verilog.codegen"]], "python2verilog.frontend package": [[5, "python2verilog-frontend-package"]], "python2verilog.frontend.generator2graph module": [[5, "module-python2verilog.frontend.generator2graph"]], "python2verilog.ir package": [[6, "python2verilog-ir-package"]], "python2verilog.ir.context module": [[6, "module-python2verilog.ir.context"]], "python2verilog.ir.expressions module": [[6, "module-python2verilog.ir.expressions"]], "python2verilog.ir.graph module": [[6, "module-python2verilog.ir.graph"]], "python2verilog.ir.statements module": [[6, "module-python2verilog.ir.statements"]], "python2verilog.optimizer package": [[7, "python2verilog-optimizer-package"]], "python2verilog.optimizer.graph module": [[7, "module-python2verilog.optimizer.graph"]], "python2verilog.utils package": [[8, "python2verilog-utils-package"]], "python2verilog.utils.assertions module": [[8, "module-python2verilog.utils.assertions"]], "python2verilog.utils.string module": [[8, "module-python2verilog.utils.string"]]}, "indexentries": {"module": [[1, "module-python2verilog"], [2, "module-python2verilog.api"], [2, "module-python2verilog.api.api"], [3, "module-python2verilog.backend"], [4, "module-python2verilog.backend.verilog"], [4, "module-python2verilog.backend.verilog.ast"], [4, "module-python2verilog.backend.verilog.codegen"], [5, "module-python2verilog.frontend"], [5, "module-python2verilog.frontend.generator2graph"], [6, "module-python2verilog.ir"], [6, "module-python2verilog.ir.context"], [6, "module-python2verilog.ir.expressions"], [6, "module-python2verilog.ir.graph"], [6, "module-python2verilog.ir.statements"], [7, "module-python2verilog.optimizer"], [7, "module-python2verilog.optimizer.graph"], [8, "module-python2verilog.utils"], [8, "module-python2verilog.utils.assertions"], [8, "module-python2verilog.utils.string"]], "python2verilog": [[1, "module-python2verilog"]], "convert_graph() (in module python2verilog.api.api)": [[2, "python2verilog.api.api.convert_graph"]], "convert_graph_debug() (in module python2verilog.api.api)": [[2, "python2verilog.api.api.convert_graph_debug"]], "python2verilog.api": [[2, "module-python2verilog.api"]], "python2verilog.api.api": [[2, "module-python2verilog.api.api"]], "python2verilog.backend": [[3, "module-python2verilog.backend"]], "always (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Always"]], "atnegedge (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.AtNegedge"]], "atnegedgestatement (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.AtNegedgeStatement"]], "atposedge (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.AtPosedge"]], "atposedgestatement (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.AtPosedgeStatement"]], "blockingsubsitution (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.BlockingSubsitution"]], "case (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Case"]], "casebuilder (class in python2verilog.backend.verilog.codegen)": [[4, "python2verilog.backend.verilog.codegen.CaseBuilder"]], "caseitem (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.CaseItem"]], "codegen (class in python2verilog.backend.verilog.codegen)": [[4, "python2verilog.backend.verilog.codegen.CodeGen"]], "declaration (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Declaration"]], "expression (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Expression"]], "ifelse (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.IfElse"]], "initial (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Initial"]], "instantiation (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Instantiation"]], "localparam (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.LocalParam"]], "module (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Module"]], "nonblockingsubsitution (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.NonBlockingSubsitution"]], "posedgesyncalways (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.PosedgeSyncAlways"]], "statement (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Statement"]], "subsitution (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.Subsitution"]], "while (class in python2verilog.backend.verilog.ast)": [[4, "python2verilog.backend.verilog.ast.While"]], "do_edge() (casebuilder method)": [[4, "python2verilog.backend.verilog.codegen.CaseBuilder.do_edge"]], "do_vertex() (casebuilder method)": [[4, "python2verilog.backend.verilog.codegen.CaseBuilder.do_vertex"]], "get_blocked_comment() (statement method)": [[4, "python2verilog.backend.verilog.ast.Statement.get_blocked_comment"]], "get_inline_comment() (statement method)": [[4, "python2verilog.backend.verilog.ast.Statement.get_inline_comment"]], "get_module_lines() (codegen method)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.get_module_lines"]], "get_module_str() (codegen method)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.get_module_str"]], "module (codegen property)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.module"]], "new_caseitem() (casebuilder method)": [[4, "python2verilog.backend.verilog.codegen.CaseBuilder.new_caseitem"]], "new_testbench() (codegen method)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.new_testbench"]], "new_testbench_lines() (codegen method)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.new_testbench_lines"]], "new_testbench_str() (codegen method)": [[4, "python2verilog.backend.verilog.codegen.CodeGen.new_testbench_str"]], "python2verilog.backend.verilog": [[4, "module-python2verilog.backend.verilog"]], "python2verilog.backend.verilog.ast": [[4, "module-python2verilog.backend.verilog.ast"]], "python2verilog.backend.verilog.codegen": [[4, "module-python2verilog.backend.verilog.codegen"]], "to_lines() (always method)": [[4, "python2verilog.backend.verilog.ast.Always.to_lines"]], "to_lines() (case method)": [[4, "python2verilog.backend.verilog.ast.Case.to_lines"], [6, "python2verilog.ir.statements.Case.to_lines"]], "to_lines() (caseitem method)": [[4, "python2verilog.backend.verilog.ast.CaseItem.to_lines"], [6, "python2verilog.ir.statements.CaseItem.to_lines"]], "to_lines() (declaration method)": [[4, "python2verilog.backend.verilog.ast.Declaration.to_lines"], [6, "python2verilog.ir.statements.Declaration.to_lines"]], "to_lines() (ifelse method)": [[4, "python2verilog.backend.verilog.ast.IfElse.to_lines"]], "to_lines() (initial method)": [[4, "python2verilog.backend.verilog.ast.Initial.to_lines"]], "to_lines() (instantiation method)": [[4, "python2verilog.backend.verilog.ast.Instantiation.to_lines"]], "to_lines() (module method)": [[4, "python2verilog.backend.verilog.ast.Module.to_lines"]], "to_lines() (statement method)": [[4, "python2verilog.backend.verilog.ast.Statement.to_lines"], [6, "python2verilog.ir.statements.Statement.to_lines"]], "to_lines() (subsitution method)": [[4, "python2verilog.backend.verilog.ast.Subsitution.to_lines"], [6, "python2verilog.ir.statements.Subsitution.to_lines"]], "to_lines() (while method)": [[4, "python2verilog.backend.verilog.ast.While.to_lines"]], "to_string() (caseitem method)": [[4, "python2verilog.backend.verilog.ast.CaseItem.to_string"]], "to_string() (expression method)": [[4, "python2verilog.backend.verilog.ast.Expression.to_string"], [6, "python2verilog.ir.expressions.Expression.to_string"]], "generator2graph (class in python2verilog.frontend.generator2graph)": [[5, "python2verilog.frontend.generator2graph.Generator2Graph"]], "context (generator2graph property)": [[5, "python2verilog.frontend.generator2graph.Generator2Graph.context"]], "python2verilog.frontend": [[5, "module-python2verilog.frontend"]], "python2verilog.frontend.generator2graph": [[5, "module-python2verilog.frontend.generator2graph"]], "results (generator2graph property)": [[5, "python2verilog.frontend.generator2graph.Generator2Graph.results"]], "root (generator2graph property)": [[5, "python2verilog.frontend.generator2graph.Generator2Graph.root"]], "add (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Add"]], "assignnode (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.AssignNode"]], "basicelement (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.BasicElement"]], "binop (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.BinOp"]], "blockingsubsitution (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.BlockingSubsitution"]], "case (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.Case"]], "caseitem (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.CaseItem"]], "clockededge (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.ClockedEdge"]], "context (class in python2verilog.ir.context)": [[6, "python2verilog.ir.context.Context"]], "declaration (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.Declaration"]], "div (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Div"]], "donenode (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.DoneNode"]], "edge (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.Edge"]], "element (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.Element"]], "expression (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Expression"]], "ifelsenode (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.IfElseNode"]], "int (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Int"]], "lessthan (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.LessThan"]], "mul (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Mul"]], "nonblockingsubsitution (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.NonBlockingSubsitution"]], "nonclockededge (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.NonClockedEdge"]], "state (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.State"]], "statesubsitution (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.StateSubsitution"]], "statement (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.Statement"]], "sub (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Sub"]], "subsitution (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.Subsitution"]], "validsubsitution (class in python2verilog.ir.statements)": [[6, "python2verilog.ir.statements.ValidSubsitution"]], "var (class in python2verilog.ir.expressions)": [[6, "python2verilog.ir.expressions.Var"]], "vertex (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.Vertex"]], "yieldnode (class in python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.YieldNode"]], "add_state() (context method)": [[6, "python2verilog.ir.context.Context.add_state"]], "add_state_weak() (context method)": [[6, "python2verilog.ir.context.Context.add_state_weak"]], "child (basicelement property)": [[6, "python2verilog.ir.graph.BasicElement.child"]], "children (element property)": [[6, "python2verilog.ir.graph.Element.children"]], "condition (ifelsenode property)": [[6, "python2verilog.ir.graph.IfElseNode.condition"]], "create_cytoscape_elements() (in module python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.create_cytoscape_elements"]], "create_networkx_adjacency_list() (in module python2verilog.ir.graph)": [[6, "python2verilog.ir.graph.create_networkx_adjacency_list"]], "entry (context attribute)": [[6, "python2verilog.ir.context.Context.entry"]], "exit (context attribute)": [[6, "python2verilog.ir.context.Context.exit"]], "false_edge (ifelsenode property)": [[6, "python2verilog.ir.graph.IfElseNode.false_edge"]], "get_all_children() (basicelement method)": [[6, "python2verilog.ir.graph.BasicElement.get_all_children"]], "get_all_children() (element method)": [[6, "python2verilog.ir.graph.Element.get_all_children"]], "get_all_children() (ifelsenode method)": [[6, "python2verilog.ir.graph.IfElseNode.get_all_children"]], "get_name() (edge method)": [[6, "python2verilog.ir.graph.Edge.get_name"]], "get_optimal_children() (basicelement method)": [[6, "python2verilog.ir.graph.BasicElement.get_optimal_children"]], "get_optimal_children() (element method)": [[6, "python2verilog.ir.graph.Element.get_optimal_children"]], "get_optimal_children() (ifelsenode method)": [[6, "python2verilog.ir.graph.IfElseNode.get_optimal_children"]], "global_vars (context attribute)": [[6, "python2verilog.ir.context.Context.global_vars"]], "input_vars (context attribute)": [[6, "python2verilog.ir.context.Context.input_vars"]], "is_declared() (context method)": [[6, "python2verilog.ir.context.Context.is_declared"]], "left (binop property)": [[6, "python2verilog.ir.expressions.BinOp.left"]], "lvalue (assignnode property)": [[6, "python2verilog.ir.graph.AssignNode.lvalue"]], "name (context attribute)": [[6, "python2verilog.ir.context.Context.name"]], "name (element property)": [[6, "python2verilog.ir.graph.Element.name"]], "optimal_child (basicelement property)": [[6, "python2verilog.ir.graph.BasicElement.optimal_child"]], "optimal_false_edge (ifelsenode property)": [[6, "python2verilog.ir.graph.IfElseNode.optimal_false_edge"]], "optimal_true_edge (ifelsenode property)": [[6, "python2verilog.ir.graph.IfElseNode.optimal_true_edge"]], "output_vars (context attribute)": [[6, "python2verilog.ir.context.Context.output_vars"]], "python2verilog.ir": [[6, "module-python2verilog.ir"]], "python2verilog.ir.context": [[6, "module-python2verilog.ir.context"]], "python2verilog.ir.expressions": [[6, "module-python2verilog.ir.expressions"]], "python2verilog.ir.graph": [[6, "module-python2verilog.ir.graph"]], "python2verilog.ir.statements": [[6, "module-python2verilog.ir.statements"]], "right (binop property)": [[6, "python2verilog.ir.expressions.BinOp.right"]], "rvalue (assignnode property)": [[6, "python2verilog.ir.graph.AssignNode.rvalue"]], "state_vars (context property)": [[6, "python2verilog.ir.context.Context.state_vars"]], "stmts (yieldnode property)": [[6, "python2verilog.ir.graph.YieldNode.stmts"]], "to_string() (assignnode method)": [[6, "python2verilog.ir.graph.AssignNode.to_string"]], "to_string() (binop method)": [[6, "python2verilog.ir.expressions.BinOp.to_string"]], "to_string() (context method)": [[6, "python2verilog.ir.context.Context.to_string"]], "to_string() (edge method)": [[6, "python2verilog.ir.graph.Edge.to_string"]], "to_string() (element method)": [[6, "python2verilog.ir.graph.Element.to_string"]], "to_string() (ifelsenode method)": [[6, "python2verilog.ir.graph.IfElseNode.to_string"]], "to_string() (yieldnode method)": [[6, "python2verilog.ir.graph.YieldNode.to_string"]], "true_edge (ifelsenode property)": [[6, "python2verilog.ir.graph.IfElseNode.true_edge"]], "unique_id (element property)": [[6, "python2verilog.ir.graph.Element.unique_id"]], "optimizegraph (class in python2verilog.optimizer.graph)": [[7, "python2verilog.optimizer.graph.OptimizeGraph"]], "backwards_replace() (in module python2verilog.optimizer.graph)": [[7, "python2verilog.optimizer.graph.backwards_replace"]], "graph_apply_mapping() (in module python2verilog.optimizer.graph)": [[7, "python2verilog.optimizer.graph.graph_apply_mapping"]], "graph_update_mapping() (in module python2verilog.optimizer.graph)": [[7, "python2verilog.optimizer.graph.graph_update_mapping"]], "is_dependent() (in module python2verilog.optimizer.graph)": [[7, "python2verilog.optimizer.graph.is_dependent"]], "python2verilog.optimizer": [[7, "module-python2verilog.optimizer"]], "python2verilog.optimizer.graph": [[7, "module-python2verilog.optimizer.graph"]], "unique_counter (optimizegraph attribute)": [[7, "python2verilog.optimizer.graph.OptimizeGraph.unique_counter"]], "implementstolines (class in python2verilog.utils.string)": [[8, "python2verilog.utils.string.ImplementsToLines"]], "indent (class in python2verilog.utils.string)": [[8, "python2verilog.utils.string.Indent"]], "lines (class in python2verilog.utils.string)": [[8, "python2verilog.utils.string.Lines"]], "add() (lines method)": [[8, "python2verilog.utils.string.Lines.add"]], "assert_dict_type() (in module python2verilog.utils.assertions)": [[8, "python2verilog.utils.assertions.assert_dict_type"]], "assert_list_type() (in module python2verilog.utils.assertions)": [[8, "python2verilog.utils.assertions.assert_list_type"]], "assert_no_newline() (lines static method)": [[8, "python2verilog.utils.string.Lines.assert_no_newline"]], "assert_type() (in module python2verilog.utils.assertions)": [[8, "python2verilog.utils.assertions.assert_type"]], "concat() (lines method)": [[8, "python2verilog.utils.string.Lines.concat"]], "indent() (lines method)": [[8, "python2verilog.utils.string.Lines.indent"]], "indentify() (indent method)": [[8, "python2verilog.utils.string.Indent.indentify"]], "indentor (indent attribute)": [[8, "python2verilog.utils.string.Indent.indentor"]], "nestify() (lines static method)": [[8, "python2verilog.utils.string.Lines.nestify"]], "python2verilog.utils": [[8, "module-python2verilog.utils"]], "python2verilog.utils.assertions": [[8, "module-python2verilog.utils.assertions"]], "python2verilog.utils.string": [[8, "module-python2verilog.utils.string"]], "to_lines() (implementstolines method)": [[8, "python2verilog.utils.string.ImplementsToLines.to_lines"]], "to_string() (implementstolines method)": [[8, "python2verilog.utils.string.ImplementsToLines.to_string"]], "to_string() (lines method)": [[8, "python2verilog.utils.string.Lines.to_string"]]}})